/* A program consists of definitions, expressions, and include statements
 * definitions include variables, functions, and classes
 *
 * This allows for defining variables, funcs, and classes inside of a block
 * So, can have nested functions and classes.*/

// include *************************************************

include myFile             // include statement at top-level

// definitions *********************************************

// variable definitions
var x                      // uninitialized
var y = 5                  // initialized
var z,p = 7,d,q = "string" // allows lists of init/uninit variables

// function definitions
def myFunc():              // no parameters passed
  return                   // optional return list

def myFunc2(x):            // one parameter passed
  return x                 // returning one variable

def myFunc3(x,y):          // multiple parameters passed
  return x,y               // return multiple variables (like in Golang)

def myFunc4():
  var x = 10               // functions can include definitions
  var y = 7
  def myNestedFunc(x,y):   // this includes function definitions
    return x*y             // return statements can include expressions
  return myNestedFunc      // can return functions

// expressions *******************************************

// expressions consist of operations done on unaries

-5 + -(7 * -3) / 5 - 3     // addition, subtraction, division, multiplication
                           // also, parenthetical grouping and negation

7 > 5                      // comparisons allowed >=,>,==,<,!=

// can also have different data types, variables, arrays, and functions as unaries

x + 5
[5,7,6] + [7,8,9]
myFunc3(4,6) + 2
27.5 + 87.31
(true & true) | false      // boolean operations and unaries
'c' + 'd'
'string' - 'ing'

/* A block contains statements as seen previously.
 * Statements can include definitions, expressions, if statements,
 * while loops and for loops.
 * From the previous examples, we have already seen variable and
 * function definitions expressed as well as expressions. */

def myFunc5(x):
  // if statements
  if(x > 5):
    print(x)
    break

  if(x > 5):
    print(x)
    break
  else:
    print(5)
    break

  if(x > 5):
    print(x)
    break
  else if(x < 5):
    print(25)
    break
  else:
    print(5)
    break

  // while loop
  while(x < 5):
    doSomething()
    end

  var arr = [1,2,3,4,5]
  // for loop
  for i in arr:
    i += 2
    print(arr)
    end

  return

// class definition *****************************************

class Person:
  var height = 6
  var weight = 10

  def bmi():
    return weight / (height*height) // should add ^ later

  endClass

joe = Person

// can access properties (vars and functions) of objects via dot
joe.height
joe.weight
joe.bmi()

// class properties are considered unaries so can be included in
// expressions (both variables and functions)

// The way this is structured, we could also have nested classes
// inside of other classes or functions or if statements...
// wherever there is a block.

class Cars:
  var wheels = 4
  class Truck:
    var shape = 'truck-like'
    endClass
  endClass

func myFunc6():
  class Random:
    var x
    endClass
  return
